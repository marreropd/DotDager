@use 'sass:math';
.circle-container {
    $particleWidth: 10px;
    $particleNum: 200;
    $particleColor: hsl(34, 100%, 80%);
  
    position: absolute;
    transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  
    .circle {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      mix-blend-mode: screen;
      background-image: radial-gradient(
        hsl(34, 100%, 80%),
        hsl(34, 100%, 80%) 10%,
        hsla(34, 100%, 80%, 0) 56%
      );
  
      animation: fadein-frames 200ms infinite, scale-frames 2s infinite;
  
      @keyframes fade-frames {
        0% {
          opacity: 1;
        }
  
        50% {
          opacity: 0.7;
        }
  
        100% {
          opacity: 1;
        }
      }
  
      @keyframes scale-frames {
        0% {
          transform: scale3d(0.4, 0.4, 1);
        }
  
        50% {
          transform: scale3d(2.2, 2.2, 1);
        }
  
        100% {
          transform: scale3d(0.4, 0.4, 1);
        }
      }
    }
  
    @for $i from 1 through $particleNum {
      &:nth-child(#{$i}) {
        $circleSize: math.random(math.div($particleWidth, 1px));
        width: $circleSize + px;
        height: $circleSize + px;
  
        $startPositionY: math.random(10) + 100;
        $framesName: "move-frames-" + $i;
        $moveDuration: 7000 + math.random(4000) + ms;
  
        animation-name: #{$framesName};
        animation-duration: $moveDuration;
        animation-delay: math.random(11000) + ms;
  
        @keyframes #{$framesName} {
          from {
            transform: translate3d(
              #{math.random(100) + vw},
              #{$startPositionY + vh},
              0
            );
          }
          
          to {
            transform: translate3d(
              #{math.random(100) + vw},
              #{- $startPositionY - math.random(30) + vh},
              0
            );
          }
        }
  
        .circle {
          animation-delay: math.random(4000) + ms;
        }
      }
    }
  }
  